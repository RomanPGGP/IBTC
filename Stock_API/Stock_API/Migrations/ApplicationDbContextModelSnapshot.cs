// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stock_API.Data;

namespace Stock_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Stock_API.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Stock_API.Models.StockEntries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ChangePercentage");

                    b.Property<decimal>("DayPriceClose");

                    b.Property<decimal>("DayPriceOpen");

                    b.Property<DateTime>("EntryDate");

                    b.Property<decimal>("MaxPriceSpan");

                    b.Property<decimal>("MinPriceSpan");

                    b.Property<decimal>("SpanPriceClose");

                    b.Property<decimal>("SpanPriceOpen");

                    b.Property<int>("StockId");

                    b.Property<int>("Volume");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockEntries");
                });

            modelBuilder.Entity("Stock_API.Models.StockEntries", b =>
                {
                    b.HasOne("Stock_API.Models.Stock", "Stock")
                        .WithMany("StockEntries")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
